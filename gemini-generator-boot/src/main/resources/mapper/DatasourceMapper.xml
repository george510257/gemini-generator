<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gls.gemini.generator.boot.web.mapper.DatasourceMapper">

    <resultMap id="datasourceResultMap" type="com.gls.gemini.generator.boot.web.entity.DatasourceEntity">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="url" property="url"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="driver_class_name" property="driverClassName"/>
        <result column="type" property="type"/>
        <result column="description" property="description"/>
        <result column="status" property="status"/>
        <result column="tenant_id" property="tenantId"/>
        <result column="version" property="version"/>
        <result column="deleted" property="deleted"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="update_user_id" property="updateUserId"/>
        <result column="create_user_name" property="createUserName"/>
        <result column="update_user_name" property="updateUserName"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="datasourceSql">
        id,name,url,username,password,driver_class_name,type,description,status,tenant_id,version,deleted,create_user_id,create_user_name,create_time,update_user_id,update_user_name,update_time
    </sql>
    <select id="getAllTables" resultType="com.gls.gemini.generator.sdk.dto.TableDto">
        SELECT table_name    tableName,
               table_comment tableComment,
               create_time   createTime
        FROM information_schema.tables
        WHERE table_schema = (SELECT DATABASE())
    </select>
    <select id="getAllColumns" resultType="com.gls.gemini.generator.sdk.dto.ColumnDto">
        SELECT column_name      columnName,
               column_comment   columnComment,
               data_type        dataType,
               ordinal_position ordinalPosition,
               table_name       tableName
        FROM information_schema.columns
        WHERE table_schema = (SELECT DATABASE())
        ORDER BY ordinal_position
    </select>

</mapper>